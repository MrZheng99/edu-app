CREATE TABLE StuPersonInfo
(
	StuId VARCHAR(20) NOT NULL,
	StuUid VARCHAR(100),
	StuPassword VARCHAR(100) NOT NULL,
	stuName VARCHAR(30) NOT NULL,
	StuSex VARCHAR(1) NOT NULL,
	StuAge VARCHAR(2) NOT NULL,
	StuBirthday DATE,
	StuPhoneNumber CHAR(11) NOT NULL,
	StuQQ VARCHAR(11),
	StuAddress VARCHAR(50)
);

CREATE TABLE TeaPersonInfo
(
	TeaId VARCHAR(4) NOT NULL,
	TeaUid VARCHAR(100),
	TeaPassword VARCHAR(100) NOT NULL,
	TeaName VARCHAR(30) NOT NULL,
	TeaSex VARCHAR(1),
	TeaAge VARCHAR(2),
	TeaBirthday DATE,
	TeaPhoneNumber CHAR(11),
	TeaQQ VARCHAR(11),
	TeaAddress VARCHAR(50)

);

CREATE TABLE CLASS(
	ClassId VARCHAR(36) NOT NULL,
	CourseName VARCHAR(50) NOT NULL,

	Practice TEXT,

	StuNumber VARCHAR(2) NOT NULL,
	InviteCode CHAR(6) UNIQUE
);


CREATE TABLE PRACTICE(
	PracticeId VARCHAR(50) NOT NULL,
	ExamDetail TEXT NOT NULL,
	FullScore VARCHAR(3) NOT NULL,
	TeaAnswer TEXT
);
CREATE TABLE SCORE(
	PracticeId VARCHAR(50) NOT NULL,
	StuId VARCHAR(20) NOT NULL,
	StuScore VARCHAR(3) NOT NULL,
	ScoreDetail TEXT NOT NULL
);
CREATE TABLE AdminAccount(
 AdminId VARCHAR(30) PRIMARY KEY,
 AdminPassword VARCHAR(30) NOT NULL,
 UID CHAR(36)
);
CREATE TABLE RecordVedio(
 ReCordId int(10) PRIMARY KEY AUTO_INCREMENT,
 ReCordTitle VARCHAR(50) NOT NULL,
 ReCordSort VARCHAR(10) NOT NULL,
 ReCordUrl VARCHAR(100) NOT NULL,
 PushTeacherId VARCHAR(4) NOT NULL,
 Constraint FK_RecordVedio_PushTeacherId foreign key(PushTeacherId) references TeaPersonInfo(TeaId)
);
create table ClassTeaRelation(
    id int(16) primary key auto_increment,
    ClassId varchar(36) not null,
    TeaId VARCHAR(4) not null,
    Constraint FK_ClassTeaRelation_TeaId foreign key(TeaId) references TeaPersonInfo(TeaId),
    Constraint FK_ClassTeaRelation_ClassId foreign key(ClassId) references CLASS(ClassId)
);
create table ClassStuRelation(
    id int(16) primary key auto_increment,
    ClassId varchar(36) not null,
    StuId VARCHAR(20) NOT NULL,
    Constraint FK_ClassStuRelation_TeaId foreign key(StuId) references StuPersonInfo(StuId),
    Constraint FK_ClassStuRelation_ClassId foreign key(ClassId) references CLASS(ClassId)
);
-- 添加约束
ALTER TABLE StuPersonInfo add Constraint PK_StuPersonInfo_StuId primary key(StuId);


ALTER TABLE TeaPersonInfo add Constraint PK_TeaPersonInfo_TeaId primary key(TeaId);


ALTER TABLE CLASS add Constraint PK_CLASS_ClassId primary key(ClassId);


ALTER TABLE PRACTICE add Constraint PK_PRACTICE_PracticeId primary key(PracticeId);

-- 联合主键
ALTER TABLE SCORE add Constraint PK_SCORE_PracticeAndStuId primary key(PracticeId,StuId);


